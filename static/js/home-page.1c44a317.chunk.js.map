{"version":3,"sources":["components/PageHeading/PageHeading.jsx","views/HomePage/HomePage.jsx"],"names":["PageHeading","text","HomePage","url","useRouteMatch","location","useLocation","useState","movies","setMovies","useEffect","MovieApi","then","data","results","catch","error","console","log","map","movie","to","pathname","id","state","from","src","poster_path","alt","original_title","name"],"mappings":"wOAAe,SAASA,EAAT,GAAgC,IAATC,EAAQ,EAARA,KAClC,OAAO,6BAAKA,I,YCMD,SAASC,IACtB,IAAQC,EAAQC,cAARD,IACFE,EAAWC,cACjB,EAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAYA,OAVAC,qBAAU,WACRC,MACGC,MAAK,SAAAC,GACJJ,EAAUI,EAAKC,YAEhBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEf,IAGD,eAAC,IAAD,WACE,cAAChB,EAAD,CAAaC,KAAK,mBACjBO,GACC,cAAC,IAAD,UACGA,EAAOW,KAAI,SAAAC,GAAK,aACf,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKnB,EAAL,kBAAkBiB,EAAMG,IAChCC,MAAO,CAAEC,KAAM,CAAEpB,cAHrB,SAME,cAAC,IAAD,CACEqB,IAAG,0CAAqCN,EAAMO,aAC9CC,IAAG,UAAER,EAAMS,sBAAR,QAA0BT,EAAMU,SAGvC,eAAC,IAAD,WACGV,EAAMU,MAAQV,EAAMU,KACpBV,EAAMS,oBAdMT,EAAMG","file":"static/js/home-page.1c44a317.chunk.js","sourcesContent":["export default function PageHeading({ text }) {\n    return <h1>{text}</h1>\n}","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useRouteMatch } from 'react-router-dom';\n\nimport * as MovieApi from '../../services/movie-api';\nimport PageHeading from '../../components/PageHeading/PageHeading';\nimport { Container, MovieItems, Poster, Ul, Title } from './HomePage.styled';\n\nexport default function HomePage() {\n  const { url } = useRouteMatch();\n  const location = useLocation();\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    MovieApi.fetchPopularMovie()\n      .then(data => {\n        setMovies(data.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <PageHeading text=\"Popular Movies\" />\n      {movies && (\n        <Ul>\n          {movies.map(movie => (\n            <MovieItems key={movie.id}>\n              <Link\n                to={{\n                  pathname: `${url}movies/${movie.id}`,\n                  state: { from: { location } },\n                }}\n              >\n                <Poster\n                  src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  alt={movie.original_title ?? movie.name}\n                />\n              </Link>\n              <Title>\n                {movie.name && movie.name}\n                {movie.original_title}\n              </Title>\n            </MovieItems>\n          ))}\n        </Ul>\n      )}\n    </Container>\n  );\n}\n"],"sourceRoot":""}